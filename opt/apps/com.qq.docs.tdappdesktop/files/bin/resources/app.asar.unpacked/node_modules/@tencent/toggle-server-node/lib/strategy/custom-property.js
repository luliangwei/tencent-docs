"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomPropertyStrategy = void 0;
var strategy_1 = require("./strategy");
var helper_1 = require("./helper");
var CustomPropertyStrategy = /** @class */ (function (_super) {
    __extends(CustomPropertyStrategy, _super);
    function CustomPropertyStrategy() {
        return _super.call(this, 'customProperty') || this;
    }
    CustomPropertyStrategy.prototype.isEnabled = function (parameters, context) {
        var listType = helper_1.getListType(parameters);
        if (!parameters.propertyName || !parameters.propertyValues) {
            return listType === 'blacklist';
        }
        var propertyName = JSON.parse(parameters.propertyName);
        if (!context.properties || !context.properties[propertyName]) {
            return listType === 'blacklist';
        }
        var propertyValue = context.properties[propertyName];
        var propertyValues = JSON.parse(parameters.propertyValues)
            .split(/\s*,\s*/)
            .filter(function (s) { return s; });
        if (listType === 'blacklist') {
            return !propertyValues.includes(propertyValue);
        }
        return propertyValues.includes(propertyValue);
    };
    return CustomPropertyStrategy;
}(strategy_1.Strategy));
exports.CustomPropertyStrategy = CustomPropertyStrategy;
//# sourceMappingURL=custom-property.js.map