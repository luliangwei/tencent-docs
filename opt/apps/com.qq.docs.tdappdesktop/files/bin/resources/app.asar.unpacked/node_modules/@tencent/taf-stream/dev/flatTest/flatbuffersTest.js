/**
 * Created by czzou on 2017/10/22.
 */
var flatbuffers = require('./flatbuffers').flatbuffers;
var DecodeTest = require('./DecodeTest_generated').DecodeTest;

var testInt = 555;
var testStr = "测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码" +
    "测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码" +
    "测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码" +
    "测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码" +
    "测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码测试解码";

var builder = new flatbuffers.Builder(1);
var str = builder.createString(testStr);
DecodeTest.TestStruct.startTestStruct(builder);
DecodeTest.TestStruct.addInt1(builder, testInt);
DecodeTest.TestStruct.addInt2(builder, testInt);
DecodeTest.TestStruct.addStr1(builder, str);
DecodeTest.TestStruct.addStr2(builder, str);
var stData = DecodeTest.TestStruct.endTestStruct(builder);
builder.finish(stData);

var uint8Arr = builder.asUint8Array();
var fb = new flatbuffers.ByteBuffer(uint8Arr);

var startTime = new Date().getTime();
var decodeTimes = 100000;
for(var i = 0; i<decodeTimes; i++){
    decode(fb);
}
var endTime = new Date().getTime();
console.log("flatbuffer解码次数：",decodeTimes);
console.log("耗时：", (endTime - startTime), "ms");

// flat特点：访问时才解码
// 1⃣️ 访问属性个数决定解码速度，不访问则几乎不耗时
// 2⃣️ 其他字段个数与大小不影响解码速度
function decode( data ) {

    var obj = DecodeTest.TestStruct.getRootAsTestStruct(data);
    obj.int1();
    obj.str1();
    //var str2 = obj.str2();
    //console.log(int1, str1);
}
