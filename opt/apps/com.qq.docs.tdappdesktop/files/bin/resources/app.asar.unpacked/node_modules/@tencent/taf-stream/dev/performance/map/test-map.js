var Taf   = require('../../../libjce.js');
var StatF = require('./StatFJce.js');

function test_performance (num) {
    var begin = new Date().getTime();

    var test_case = function (tst) {
        var msg = new Taf.Map(StatF.taf.StatMicMsgHead, StatF.taf.StatMicMsgBody);
        var ii,StatMicMsgHead;
        for (ii = 0; ii < 1000; ii++) {
            StatMicMsgHead = new StatF.taf.StatMicMsgHead();
            StatMicMsgHead.masterName       = 'not_taf_client' + ii.toString();
            StatMicMsgHead.slaveName        = 'MTT.NodejsTestServer';
            StatMicMsgHead.interfaceName    = 'HttpObj';
            StatMicMsgHead.masterIp         = '127.0.0.1';
            StatMicMsgHead.slaveIp          = '10.231.129.90';
            StatMicMsgHead.slavePort        = 80;
            StatMicMsgHead.returnValue      = 0;

            var StatMicMsgBody = new StatF.taf.StatMicMsgBody();
            StatMicMsgBody.count            = ii;
            StatMicMsgBody.timeoutCount     = 2;
            StatMicMsgBody.execCount        = 3;
            StatMicMsgBody.totalRspTime     = 476249;
            StatMicMsgBody.maxRspTime       = 2999;
            StatMicMsgBody.minRspTime       = 4;

            msg.put(StatMicMsgHead, StatMicMsgBody);
        }

        var os = new Taf.JceOutputStream();
        os.writeMap(1, msg);

        var tt = new Taf.JceInputStream(os.getBinBuffer());
        var ta = tt.readMap(1, true, Taf.Map(StatF.taf.StatMicMsgHead, StatF.taf.StatMicMsgBody));
        for (ii = 0; ii < 1000; ii++) {
            StatMicMsgHead              = new StatF.taf.StatMicMsgHead();
            StatMicMsgHead.masterName       = 'not_taf_client' + ii.toString();
            StatMicMsgHead.slaveName        = 'MTT.NodejsTestServer';
            StatMicMsgHead.interfaceName    = 'HttpObj';
            StatMicMsgHead.masterIp         = '127.0.0.1';
            StatMicMsgHead.slaveIp          = '10.231.129.90';
            StatMicMsgHead.slavePort        = 80;
            StatMicMsgHead.returnValue      = 0;

            var value = ta.get(StatMicMsgHead);
            if (value == undefined) {
                console.log("undefined:", tst, "\n", StatMicMsgHead, "\n"                );
                console.log("index:", ii);
                //for (var key in msg.keys) {
                //    console.log(key);
                //}
            }
        }
    }

    for (var i = 0;i < num; i++) {
        test_case(i);
    }

    console.log("time:", (new Date().getTime()) - begin);
}

test_performance(1000);
