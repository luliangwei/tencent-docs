module QB
{
    struct coverDetail
    {
         0 optional string title;         //标题
         1 optional string description;   //故事
         2 optional string image;         //图片链接
         3 optional string url;       // 链接
         4 optional long valid_time;     //生效时间，对运营封面有意义
    };


    struct siteDetail
    {
         0 optional string title;           //标题
         1 optional string description;     //描述
         2 optional string icon;            //图标
         3 optional string url;             //链接
         4 optional int    is_default_show; //是否默认展示
    };

    struct getCoverReq
    {
        0 optional int num; //期望的运营封面个数
    };


    struct getCoverRsp
    {
        0 optional coverDetail _default;  //default cover
        1 optional vector<coverDetail> _operation; // operational cover
    };


    struct getSiteReq
    {
        0 optional int num; //期望的运营封面个数
        1 optional string client_ver; // 5.1 及以上需要填写'5.1' 5.0可不填
    };


    struct getSiteRsp
    {
        0 optional vector<siteDetail> sites;

    };


    // 5.3新增

    struct hdSiteDetail
    {
        0 optional int id;                  // id
        1 optional string name;             // 标题
        2 optional string finalurl;         // 目标链接
        3 optional string customurl;        // 商业链接
        4 optional string img;              // 图片地址
        5 optional string description;      // 描述
        6 optional int isshow;              // 是否展示: 1展示 0不展示 默认为1
        7 optional int category;            // 分类: 1综合 2视频 3电商 4游戏 5体育 6小说 7生活
        8 optional int status;              // 状态: 预留字段
        9 optional string bookmark;         // 备注: 预留字段
    };

    struct hdHomeDetail
    {
        0 optional int id;                  // id
        1 optional string name;             // 标题
        2 optional string finalurl;         // 目标链接
        3 optional string customurl;        // 商业链接
        4 optional string img;              // 图片地址
        5 optional int isshow;              // 是否展示: 1展示 0不展示 默认为1
        6 optional int type;                // 类型
        7 optional int deletable;           // 是否可删除: 1是 0否 默认为1
        8 optional int forcedelete;         // 是否强制删除: 1是 0否 默认为0
        9 optional int status;              // 状态: 预留字段
        10 optional string bookmark;        // 备注: 预留字段
    };

    struct hdBannerDetail
    {
        0 optional int id;                  // id
        1 optional string name;             // 标题
        2 optional int type;                // 类型: 0大 1中 2小 默认为0
        3 optional string img;              // 图片地址
        4 optional string content;          // 内容
        5 optional string attachment;       // 附件: 预留字段
        6 optional int status;              // 状态: 预留字段
        7 optional string start_time;       // 上线时间
        8 optional string end_time;         // 下线时间
    };

    struct getHdSiteReq
    {
        0 optional int num; // 期望返回个数
        1 optional int category; // 请求分类
    };

    struct getHdSiteRsp
    {
        0 optional vector<hdSiteDetail> hdsite;
    };

    struct getHdHomeReq
    {
        0 optional int num; // 期望返回个数
    };

    struct getHdHomeRsp
    {
        0 optional vector<hdHomeDetail> hdhome;
    };

    struct getHdBannerReq
    {
        0 optional int num; // 期望返回个数
    };

    struct getHdBannerRsp
    {
        0 optional vector<hdBannerDetail> hdbanner;
    };

    interface Cover
    {
        int test();
        int reload();
        int getCover(getCoverReq req, out getCoverRsp rsp);
        int getSite(getSiteReq req, out getSiteRsp rsp);

        // 5.3新增
        int getHdSite(getHdSiteReq req, out getHdSiteRsp rsp);
        int getHdHome(getHdHomeReq req, out getHdHomeRsp rsp);
        int getHdBanner(getHdBannerReq req, out getHdBannerRsp rsp);
    };
};