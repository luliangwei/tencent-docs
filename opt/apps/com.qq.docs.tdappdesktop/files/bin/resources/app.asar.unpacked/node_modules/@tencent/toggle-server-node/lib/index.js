"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TAB_AB_TEST = exports.ROMA_AB_TEST = exports.TOGGLE_FORMAL = exports.TOGGLE_DEV = exports.reportTabMetricsData = exports.activateExperiment = exports.getFeatureToggleDefinitions = exports.getFeatureToggleDefinition = exports.destroy = exports.isEnabledWithJsonData = exports.isEnabledWithListData = exports.isEnabledWithBooleanData = exports.isEnabledWithNumberData = exports.isEnabledWithStringData = exports.isEnabledWithDataset = exports.isEnabled = exports.initialize = void 0;
var toggle_1 = require("./toggle");
var index_1 = require("./strategy/index");
Object.defineProperty(exports, "Strategy", { enumerable: true, get: function () { return index_1.Strategy; } });
// // @ts-ignore
// process.env.UV_THREADPOOL_SIZE = 128
var instance;
function initialize(options) {
    instance = new toggle_1.default(options);
    return instance;
}
exports.initialize = initialize;
function isEnabled(name, context, fallbackValue, abTestInfo) {
    if (context === void 0) { context = {}; }
    return !!instance && instance.isEnabled(name, context, fallbackValue, abTestInfo);
}
exports.isEnabled = isEnabled;
function isEnabledWithDataset(name, context, fallbackValue, abTestInfo) {
    if (context === void 0) { context = {}; }
    return !!instance && instance.isEnabledWithDataset(name, context, fallbackValue, abTestInfo);
}
exports.isEnabledWithDataset = isEnabledWithDataset;
function isEnabledWithStringData(name, context, fallbackValue, abTestInfo) {
    if (context === void 0) { context = {}; }
    return !!instance && instance.isEnabledWithStringData(name, context, fallbackValue, abTestInfo);
}
exports.isEnabledWithStringData = isEnabledWithStringData;
function isEnabledWithNumberData(name, context, fallbackValue, abTestInfo) {
    if (context === void 0) { context = {}; }
    return !!instance && instance.isEnabledWithNumberData(name, context, fallbackValue, abTestInfo);
}
exports.isEnabledWithNumberData = isEnabledWithNumberData;
function isEnabledWithBooleanData(name, context, fallbackValue, abTestInfo) {
    if (context === void 0) { context = {}; }
    return !!instance && instance.isEnabledWithBooleanData(name, context, fallbackValue, abTestInfo);
}
exports.isEnabledWithBooleanData = isEnabledWithBooleanData;
function isEnabledWithListData(name, context, fallbackValue, abTestInfo) {
    if (context === void 0) { context = {}; }
    return !!instance && instance.isEnabledWithListData(name, context, fallbackValue, abTestInfo);
}
exports.isEnabledWithListData = isEnabledWithListData;
function isEnabledWithJsonData(name, context, fallbackValue, abTestInfo) {
    if (context === void 0) { context = {}; }
    return !!instance && instance.isEnabledWithJsonData(name, context, fallbackValue, abTestInfo);
}
exports.isEnabledWithJsonData = isEnabledWithJsonData;
function destroy() {
    return instance === null || instance === void 0 ? void 0 : instance.destroy();
}
exports.destroy = destroy;
function getFeatureToggleDefinition(toggleName) {
    return instance === null || instance === void 0 ? void 0 : instance.getFeatureToggleDefinition(toggleName);
}
exports.getFeatureToggleDefinition = getFeatureToggleDefinition;
function getFeatureToggleDefinitions() {
    return instance === null || instance === void 0 ? void 0 : instance.getFeatureToggleDefinitions();
}
exports.getFeatureToggleDefinitions = getFeatureToggleDefinitions;
function activateExperiment(guid, appId, expData) {
    return instance === null || instance === void 0 ? void 0 : instance.activateExperiment(guid, appId, expData);
}
exports.activateExperiment = activateExperiment;
function reportTabMetricsData(tabReportData) {
    return instance === null || instance === void 0 ? void 0 : instance.reportTabMetricsData(tabReportData);
}
exports.reportTabMetricsData = reportTabMetricsData;
exports.TOGGLE_DEV = 'dev';
exports.TOGGLE_FORMAL = 'formal';
exports.ROMA_AB_TEST = 'roma';
exports.TAB_AB_TEST = 'tab';
//# sourceMappingURL=index.js.map