// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 3.1.1.2 by WSRD Tencent.
// Generated from `./GameB.jce'
// **********************************************************************
var TafStream = require("../../../");
var _TAF_MODULE_A_ = require('./GameBJce.js');


var MiniGame = MiniGame || {};
module.exports.MiniGame = MiniGame;

MiniGame.TCoinDesc = function() {
    this.gameID = 0;
    this.strCoinDesc = "";
};
MiniGame.TCoinDesc._write = function (os, tag, value) { os.writeStruct(tag, value); }
MiniGame.TCoinDesc._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
MiniGame.TCoinDesc._readFrom = function (is) {
    var tmp = new MiniGame.TCoinDesc();
    tmp.gameID = is.readInt32(0, false, 0);
    tmp.strCoinDesc = is.readString(1, false, "");
    return tmp;
};
MiniGame.TCoinDesc.prototype._writeTo = function (os) {
    os.writeInt32(0, this.gameID);
    os.writeString(1, this.strCoinDesc);
};
MiniGame.TCoinDesc.prototype._equal = function (anItem) {
    return anItem.gameID === this.gameID
    && anItem.strCoinDesc === this.strCoinDesc;
}
MiniGame.TCoinDesc.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
MiniGame.TCoinDesc.prototype.toObject = function() { 
    var tmp = {};

    tmp.gameID = this.gameID;
    tmp.strCoinDesc = this.strCoinDesc;
    
    return tmp;
}
MiniGame.TCoinDesc.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("gameID") || (this.gameID = json.gameID);
    !json.hasOwnProperty("strCoinDesc") || (this.strCoinDesc = json.strCoinDesc);
}
MiniGame.TCoinDesc.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
MiniGame.TCoinDesc.new = function () {
    return new MiniGame.TCoinDesc();
}
MiniGame.TCoinDesc.create = function (is) {
    return MiniGame.TCoinDesc._readFrom(is);
}
MiniGame.TItem = function() {
    this.ID = 0;
    this.sDesc = "";
    this.st = new _TAF_MODULE_A_.MiniGameB.TGameMsgAction();
};
MiniGame.TItem._write = function (os, tag, value) { os.writeStruct(tag, value); }
MiniGame.TItem._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
MiniGame.TItem._readFrom = function (is) {
    var tmp = new MiniGame.TItem();
    tmp.ID = is.readInt32(0, false, 0);
    tmp.sDesc = is.readString(1, false, "");
    tmp.st = is.readStruct(2, false, _TAF_MODULE_A_.MiniGameB.TGameMsgAction);
    return tmp;
};
MiniGame.TItem.prototype._writeTo = function (os) {
    os.writeInt32(0, this.ID);
    os.writeString(1, this.sDesc);
    os.writeStruct(2, this.st);
};
MiniGame.TItem.prototype._equal = function (anItem) {
    return anItem.ID === this.ID
    && anItem.sDesc === this.sDesc
    && anItem.st === this.st;
}
MiniGame.TItem.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
MiniGame.TItem.prototype.toObject = function() { 
    var tmp = {};

    tmp.ID = this.ID;
    tmp.sDesc = this.sDesc;
    tmp.st = this.st.toObject();
    
    return tmp;
}
MiniGame.TItem.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("ID") || (this.ID = json.ID);
    !json.hasOwnProperty("sDesc") || (this.sDesc = json.sDesc);
    !json.hasOwnProperty("st") || (this.st.readFromObject(json.st));
}
MiniGame.TItem.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
MiniGame.TItem.new = function () {
    return new MiniGame.TItem();
}
MiniGame.TItem.create = function (is) {
    return MiniGame.TItem._readFrom(is);
}
MiniGame.TUserInfo = function() {
    this.var_short = 0;
    this.var_int32 = 0;
    this.var_string = "";
    this.var_long = 0;
    this.var_bool = true;
    this.var_uint16 = 0;
    this.st1 = new MiniGame.TCoinDesc();
    this.st2 = new MiniGame.TItem();
    this.map1 = new TafStream.Map(TafStream.String, TafStream.String);
    this.map2 = new TafStream.Map(TafStream.String, MiniGame.TCoinDesc);
    this.map3 = new TafStream.Map(TafStream.String, TafStream.Map(TafStream.String, MiniGame.TCoinDesc));
    this.map4 = new TafStream.Map(TafStream.Int32, TafStream.List(MiniGame.TCoinDesc));
    this.map5 = new TafStream.Map(TafStream.String, TafStream.List(TafStream.String));
    this.map6 = new TafStream.Map(TafStream.String, TafStream.BinBuffer);
    this.map7 = new TafStream.Map(TafStream.String, TafStream.Map(TafStream.String, TafStream.BinBuffer));
    this.list1 = new TafStream.List(TafStream.String);
    this.list2 = new TafStream.List(MiniGame.TCoinDesc);
    this.list3 = new TafStream.BinBuffer();
    this.list4 = new TafStream.List(TafStream.BinBuffer);
    this.list5 = new TafStream.List(TafStream.List(MiniGame.TCoinDesc));
};
MiniGame.TUserInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
MiniGame.TUserInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
MiniGame.TUserInfo._readFrom = function (is) {
    var tmp = new MiniGame.TUserInfo();
    tmp.var_short = is.readInt16(0, false, 0);
    tmp.var_int32 = is.readInt32(1, false, 0);
    tmp.var_string = is.readString(2, false, "");
    tmp.var_long = is.readInt64(3, false, 0);
    tmp.var_bool = is.readBoolean(4, false, true);
    tmp.var_uint16 = is.readUInt16(5, false, 0);
    tmp.st1 = is.readStruct(10, false, MiniGame.TCoinDesc);
    tmp.st2 = is.readStruct(11, false, MiniGame.TItem);
    tmp.map1 = is.readMap(20, false, TafStream.Map(TafStream.String, TafStream.String));
    tmp.map2 = is.readMap(21, false, TafStream.Map(TafStream.String, MiniGame.TCoinDesc));
    tmp.map3 = is.readMap(22, false, TafStream.Map(TafStream.String, TafStream.Map(TafStream.String, MiniGame.TCoinDesc)));
    tmp.map4 = is.readMap(23, false, TafStream.Map(TafStream.Int32, TafStream.List(MiniGame.TCoinDesc)));
    tmp.map5 = is.readMap(24, false, TafStream.Map(TafStream.String, TafStream.List(TafStream.String)));
    tmp.map6 = is.readMap(25, false, TafStream.Map(TafStream.String, TafStream.BinBuffer));
    tmp.map7 = is.readMap(26, false, TafStream.Map(TafStream.String, TafStream.Map(TafStream.String, TafStream.BinBuffer)));
    tmp.list1 = is.readList(30, false, TafStream.List(TafStream.String));
    tmp.list2 = is.readList(31, false, TafStream.List(MiniGame.TCoinDesc));
    tmp.list3 = is.readBytes(32, false, TafStream.BinBuffer);
    tmp.list4 = is.readList(33, false, TafStream.List(TafStream.BinBuffer));
    tmp.list5 = is.readList(34, false, TafStream.List(TafStream.List(MiniGame.TCoinDesc)));
    return tmp;
};
MiniGame.TUserInfo.prototype._writeTo = function (os) {
    os.writeInt16(0, this.var_short);
    os.writeInt32(1, this.var_int32);
    os.writeString(2, this.var_string);
    os.writeInt64(3, this.var_long);
    os.writeBoolean(4, this.var_bool);
    os.writeUInt16(5, this.var_uint16);
    os.writeStruct(10, this.st1);
    os.writeStruct(11, this.st2);
    os.writeMap(20, this.map1);
    os.writeMap(21, this.map2);
    os.writeMap(22, this.map3);
    os.writeMap(23, this.map4);
    os.writeMap(24, this.map5);
    os.writeMap(25, this.map6);
    os.writeMap(26, this.map7);
    os.writeList(30, this.list1);
    os.writeList(31, this.list2);
    os.writeBytes(32, this.list3);
    os.writeList(33, this.list4);
    os.writeList(34, this.list5);
};
MiniGame.TUserInfo.prototype._equal = function (anItem) {
    return anItem.var_short === this.var_short
    && anItem.var_int32 === this.var_int32
    && anItem.var_string === this.var_string
    && anItem.var_long === this.var_long
    && anItem.var_bool === this.var_bool
    && anItem.var_uint16 === this.var_uint16
    && anItem.st1 === this.st1
    && anItem.st2 === this.st2
    && anItem.map1 === this.map1
    && anItem.map2 === this.map2
    && anItem.map3 === this.map3
    && anItem.map4 === this.map4
    && anItem.map5 === this.map5
    && anItem.map6 === this.map6
    && anItem.map7 === this.map7
    && anItem.list1 === this.list1
    && anItem.list2 === this.list2
    && anItem.list3 === this.list3
    && anItem.list4 === this.list4
    && anItem.list5 === this.list5;
}
MiniGame.TUserInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
MiniGame.TUserInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.var_short = this.var_short;
    tmp.var_int32 = this.var_int32;
    tmp.var_string = this.var_string;
    tmp.var_long = this.var_long;
    tmp.var_bool = this.var_bool;
    tmp.var_uint16 = this.var_uint16;
    tmp.st1 = this.st1.toObject();
    tmp.st2 = this.st2.toObject();
    tmp.map1 = this.map1.toObject();
    tmp.map2 = this.map2.toObject();
    tmp.map3 = this.map3.toObject();
    tmp.map4 = this.map4.toObject();
    tmp.map5 = this.map5.toObject();
    tmp.map6 = this.map6.toObject();
    tmp.map7 = this.map7.toObject();
    tmp.list1 = this.list1.toObject();
    tmp.list2 = this.list2.toObject();
    tmp.list3 = this.list3.toObject();
    tmp.list4 = this.list4.toObject();
    tmp.list5 = this.list5.toObject();
    
    return tmp;
}
MiniGame.TUserInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("var_short") || (this.var_short = json.var_short);
    !json.hasOwnProperty("var_int32") || (this.var_int32 = json.var_int32);
    !json.hasOwnProperty("var_string") || (this.var_string = json.var_string);
    !json.hasOwnProperty("var_long") || (this.var_long = json.var_long);
    !json.hasOwnProperty("var_bool") || (this.var_bool = json.var_bool);
    !json.hasOwnProperty("var_uint16") || (this.var_uint16 = json.var_uint16);
    !json.hasOwnProperty("st1") || (this.st1.readFromObject(json.st1));
    !json.hasOwnProperty("st2") || (this.st2.readFromObject(json.st2));
    !json.hasOwnProperty("map1") || (this.map1.readFromObject(json.map1));
    !json.hasOwnProperty("map2") || (this.map2.readFromObject(json.map2));
    !json.hasOwnProperty("map3") || (this.map3.readFromObject(json.map3));
    !json.hasOwnProperty("map4") || (this.map4.readFromObject(json.map4));
    !json.hasOwnProperty("map5") || (this.map5.readFromObject(json.map5));
    !json.hasOwnProperty("map6") || (this.map6.readFromObject(json.map6));
    !json.hasOwnProperty("map7") || (this.map7.readFromObject(json.map7));
    !json.hasOwnProperty("list1") || (this.list1.readFromObject(json.list1));
    !json.hasOwnProperty("list2") || (this.list2.readFromObject(json.list2));
    !json.hasOwnProperty("list3") || (this.list3.readFromObject(json.list3));
    !json.hasOwnProperty("list4") || (this.list4.readFromObject(json.list4));
    !json.hasOwnProperty("list5") || (this.list5.readFromObject(json.list5));
}
MiniGame.TUserInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
MiniGame.TUserInfo.new = function () {
    return new MiniGame.TUserInfo();
}
MiniGame.TUserInfo.create = function (is) {
    return MiniGame.TUserInfo._readFrom(is);
}


