var Taf   = require("../../libjce");
var Test  = require("../jce/StatFJce.js").Test;

//先对数组进行赋值
var StatMicMsgHead1 = new Test.StatMicMsgHead();
StatMicMsgHead1.masterName      = 'not_taf_client';
StatMicMsgHead1.slaveName       = 'MTT.NodejsTestServer';
StatMicMsgHead1.interfaceName   = 'HttpObj';
StatMicMsgHead1.masterIp        = '127.0.0.1';
StatMicMsgHead1.slaveIp         = '10.231.129.90';
StatMicMsgHead1.slavePort       = 80;
StatMicMsgHead1.returnValue     = 0;

var StatMicMsgBody1 = new Test.StatMicMsgBody();
StatMicMsgBody1.count           = 360;
StatMicMsgBody1.timeoutCount    = 2;
StatMicMsgBody1.execCount       = 3;
StatMicMsgBody1.totalRspTime    = 476249;
StatMicMsgBody1.maxRspTime      = 2999;
StatMicMsgBody1.minRspTime      = 4;

var StatMicMsgHead2 = new Test.StatMicMsgHead();
StatMicMsgHead2.masterName      = 'not_taf_client1';
StatMicMsgHead2.slaveName       = 'MTT.NodejsTestServer';
StatMicMsgHead2.interfaceName   = 'HttpObj';
StatMicMsgHead2.masterIp        = '127.0.0.2';
StatMicMsgHead2.slaveIp         = '';
StatMicMsgHead2.slavePort       = 80;
StatMicMsgHead2.returnValue     = 0;

var StatMicMsgBody2 = new Test.StatMicMsgBody();
StatMicMsgBody2.count           = 36632122;
StatMicMsgBody2.timeoutCount    = 223;
StatMicMsgBody2.execCount       = 3000;
StatMicMsgBody2.totalRspTime    = 4000049;
StatMicMsgBody2.maxRspTime      = 299900;
StatMicMsgBody2.minRspTime      = 400;

//构造Map类型
var msg = new Taf.Map(Test.StatMicMsgHead, Test.StatMicMsgBody);
msg.put(StatMicMsgHead1, StatMicMsgBody1);
msg.put(StatMicMsgHead2, StatMicMsgBody2);

//JCE编码
var os = new Taf.JceOutputStream();
os.writeMap(1, msg);

//JCE解码
var data = os.getBinBuffer().toNodeBuffer();

var is = new Taf.JceInputStream(new Taf.BinBuffer(data));
var ta = is.readMap(1, true, Taf.Map(Test.StatMicMsgHead, Test.StatMicMsgBody));

//遍历Map结果集
ta.forEach(function (key, value){
    console.log("KEY:", key.masterName, "VALUE.totalRspTime", value.totalRspTime);
});

//根据值去获取
var tb = ta.get(StatMicMsgHead2);
if (tb == undefined) {
    console.log("not found by name : StatMicMsgHead2");
} else {
    console.log(tb.totalRspTime);
}

var StatMicMsgHead3 = new Test.StatMicMsgHead();
StatMicMsgHead3.masterName      = 'not_taf_client';
StatMicMsgHead3.slaveName       = 'MTT.NodejsTestServer';
StatMicMsgHead3.interfaceName   = 'HttpObj';
StatMicMsgHead3.masterIp        = '127.0.0.1';
StatMicMsgHead3.slaveIp         = '10.231.129.90';
StatMicMsgHead3.slavePort       = 80;
StatMicMsgHead3.returnValue     = 0;

var body = ta.get(StatMicMsgHead3);
if (body == undefined) {
    console.log("not found by name : StatMicMsgHead3");
} else {
    console.log(body.totalRspTime);
}
