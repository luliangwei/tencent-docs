"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.intersectionMetadata = exports.isEmptyMetadata = exports.isMetadataMatch = void 0;
/**
 * 判断两个元数据是否匹配
 * @param a 静态元数据 A
 * @param b 静态（动态）元数据 B
 */
const isMetadataMatch = (a, b) => {
    const keysA = Object.keys(a);
    const keysB = Object.keys(b);
    if (keysA.length < keysB.length) { /** false positive */
        return false;
    }
    return keysB.every((key) => {
        const valueB = b[key];
        const valueA = a[key];
        if (typeof valueB === "string") {
            return valueA === valueB;
        }
        if (valueB instanceof RegExp) {
            return valueB.test(valueA);
        }
        return false;
    });
};
exports.isMetadataMatch = isMetadataMatch;
/**
 * 判断元数据是否为空
 * @param metadata 元数据
 */
const isEmptyMetadata = (metadata) => Object.keys(metadata).length === 0;
exports.isEmptyMetadata = isEmptyMetadata;
/**
 * 找到两个元数据相交的部分
 * @param a 元数据 A
 * @param b 元数据 B
 * @returns 交集
 */
const intersectionMetadata = (a, b) => {
    const intersection = {};
    Object.keys(a).forEach((key) => {
        const valueB = b[key];
        const valueA = a[key];
        if (valueA === valueB) {
            intersection[key] = valueA;
        }
    });
    return intersection;
};
exports.intersectionMetadata = intersectionMetadata;
//# sourceMappingURL=metadata.js.map